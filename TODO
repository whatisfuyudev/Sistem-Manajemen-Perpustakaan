1. start from app.js line 54, api section, make it includes all the routes,
   for each route, make their controller, then make their services.
   make sure to thoroughly understand the underlying functionalities for each services.
   "
   [project description]
   from the above project description, focusing on X, what are the core functionalities that it might possible has? make it accurate and comprehensive.
   "
    - make a GET api to fetch all books
        - setup the postgresql DB (connecting it, inserting data)
            - make sure the book service works properly, ensure data sanitization
                - modify form.html so it uploads a picture instead of providing url to cover image
                - upload picture to web server and store path into database
                  - the back end functionality, it needs to accept the image and store it
                  - dataHelper.js, 1. upload image, 2. server saves, 
                    3. column coverImage path
                
                - test all api on book routes
                   // List all books (could also support query parameters for filtering)
                    router.get('/', booksController.listBooks);

                    // Retrieve a single book by ISBN
                    router.get('/:isbn', booksController.getBook);

                    // Update a book by ISBN
                    router.put('/:isbn', booksController.updateBook);

                    // Delete a book by ISBN
                    router.delete('/:isbn', booksController.deleteBook);
            - try making a simple homepage to test each api
    - make the html homepage that display all books (search up responsive design)
    



   