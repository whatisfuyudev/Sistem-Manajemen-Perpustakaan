
1. start from app.js line 54, api section, make it includes all the routes,
   for each route, make their controller, then make their services.
   make sure to thoroughly understand the underlying functionalities for each services.
   "
   [project description]
   from the above project description, focusing on X, what are the core functionalities that it might possible has? make it accurate and comprehensive.
    
   make it excellent, highly accurate like real world projects, and comprehensive and exhaustive
   "
2. do for auth, then checkouts, then reservations, then reports, then notification, do more on auth functionalities
    - check for token expiration, new endoint for requesting new token with refresh token
      - fix register
        - no putting cover image url when registering, only upload at profile page
        - no putting address and phone number, that is also at profile page
        - register success redirects to login page
        - can only register as patron, so no remove that choice and automatically register as one
      - fix login
        - login page success redirect to profile (temporary, should be homepage)
      
    

3. make user interface, reponsive html pages

### General TODO
- make sure the book service works properly, ensure data sanitization
- prevent upload cover image abuse (only upload the image at the same time as clicking update book data)
- make ui html page
- make the html homepage that display all books (search up responsive design)
- at user routes, create new user is only for admin access