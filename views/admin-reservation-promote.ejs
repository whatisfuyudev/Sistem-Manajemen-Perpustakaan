<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Promote Reservations</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      color: #333;
      padding: 1rem;
    }
    .container {
      max-width: 700px;
      margin: 0 auto;
      background: #fff;
      border-radius: 6px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      padding: 1.5rem;
    }
    h1 {
      margin-bottom: 1rem;
      font-size: 1.5rem;
      text-align: center;
    }
    .form-group {
      display: flex;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }
    .form-group input {
      flex: 1;
      padding: 0.5rem;
      font-size: 1rem;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    .form-group button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      background: #007bff;
      border: none;
      color: #fff;
      border-radius: 4px;
      cursor: pointer;
    }
    .form-group button:disabled {
      background: #aaa;
      cursor: not-allowed;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1rem;
    }
    th, td {
      padding: 0.5rem;
      border: 1px solid #ddd;
      text-align: left;
    }
    th {
      background: #f0f0f0;
    }
    .action-bar {
      text-align: right;
    }
    .action-bar button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .promote-btn {
      background: #28a745;
      color: #fff;
    }
    .promote-btn:disabled {
      background: #aaa;
      cursor: not-allowed;
    }
    .message {
      margin-bottom: 1rem;
      padding: 0.5rem;
      border-radius: 4px;
    }
    .message.success { background: #d4edda; color: #155724; }
    .message.error   { background: #f8d7da; color: #721c24; }
  </style>
</head>
<body>
  <div class="container">
    <h1>Promote Next Reservation</h1>

    <!-- ISBN search form -->
    <div class="form-group">
      <input type="text" id="isbnInput" placeholder="Enter Book ISBNâ€¦" />
      <button id="searchBtn">Search</button>
    </div>

    <!-- Feedback message -->
    <div id="msgContainer"></div>

    <!-- Reservations list -->
    <div id="resultsContainer">
      <!-- Populated by JS -->
    </div>

    <!-- Promote action -->
    <div class="action-bar">
      <button id="promoteBtn" class="promote-btn" disabled>Promote Next</button>
    </div>
  </div>

  <script>
    const searchBtn    = document.getElementById('searchBtn');
    const isbnInput    = document.getElementById('isbnInput');
    const resultsDiv   = document.getElementById('resultsContainer');
    const promoteBtn   = document.getElementById('promoteBtn');
    const msgContainer = document.getElementById('msgContainer');

    let currentIsbn = '';
    let pendingList = [];

    // Utility to show messages
    function showMessage(text, type = 'success') {
      msgContainer.innerHTML = `<div class="message ${type}">${text}</div>`;
      setTimeout(() => msgContainer.innerHTML = '', 4000);
    }

    // Render table of reservations
    function renderReservations(list) {
      if (list.length === 0) {
        resultsDiv.innerHTML = '<p>No reservations found for this ISBN.</p>';
        promoteBtn.disabled = true;
        pendingList = [];
        return;
      }
      // Sort by queuePosition ascending
      list.sort((a, b) => a.queuePosition - b.queuePosition);

      // Build table
      let html = '<table><thead><tr>'
        + '<th>Queue Pos.</th><th>Reservation ID</th>'
        + '<th>User ID</th><th>Status</th><th>Req Date</th><th>Exp Date</th>'
        + '</tr></thead><tbody>';
      list.forEach(r => {
        html += `<tr>
          <td>${r.queuePosition}</td>
          <td>${r.id}</td>
          <td>${r.userId}</td>
          <td>${r.status}</td>
          <td>${new Date(r.requestDate).toLocaleDateString()}</td>
          <td>${r.expirationDate ? new Date(r.expirationDate).toLocaleDateString() : '-'}</td>
        </tr>`;
      });
      html += '</tbody></table>';
      resultsDiv.innerHTML = html;

      // Extract only pending reservations
      pendingList = list.filter(r => r.status === 'pending');
      promoteBtn.disabled = pendingList.length === 0;
    }

    // Fetch reservations by ISBN
    async function fetchByIsbn(isbn) {
      try {
        const qs = new URLSearchParams({ bookIsbn: isbn, limit: 50, page: 1 });
        const res = await fetch(`/api/reservations/history?${qs}`);
        if (!res.ok) throw new Error(`Error ${res.status}`);
        const { reservations } = await res.json();
        return reservations;
      } catch (err) {
        showMessage(`Search failed: ${err.message}`, 'error');
        return [];
      }
    }

    // Search button handler
    searchBtn.addEventListener('click', async () => {
      const isbn = isbnInput.value.trim();
      if (!isbn) {
        showMessage('Please enter a valid ISBN.', 'error');
        return;
      }
      currentIsbn = isbn;
      const list = await fetchByIsbn(isbn);
      renderReservations(list);
    });

    // Promote button handler
    promoteBtn.addEventListener('click', async () => {
      if (!currentIsbn || pendingList.length === 0) return;

      // Confirm with user
      if (!confirm(`Promote reservation #${pendingList[0].id}?`)) return;

      try {
        const res = await fetch(
          `/api/reservations/promote/${encodeURIComponent(currentIsbn)}`,
          { method: 'PUT' }
        );
        if (!res.ok) {
          const errText = await res.text();
          throw new Error(errText || `Error ${res.status}`);
        }
        const updated = await res.json();
        showMessage(`Promoted #${updated.id}; now available until ${new Date(updated.expirationDate).toLocaleString()}`, 'success');
        // Refresh list
        const list = await fetchByIsbn(currentIsbn);
        renderReservations(list);
      } catch (err) {
        showMessage(`Promotion failed: ${err.message}`, 'error');
      }
    });
  </script>
</body>
</html>
